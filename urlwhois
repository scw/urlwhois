#!/usr/bin/env python
# Extract WHOIS information from a fully formed URL

import os
import pickle
import subprocess
import sys
import urllib
from urlparse import urlparse

class TopLevelDomains(object):
    def __init__(self):
        self.url = 'https://mxr.mozilla.org/mozilla/source/netwerk/dns/src/effective_tld_names.dat?raw=1'
        self.tlds = self.tlds()

    def tlds(self):
        path = 'tlds.dat'
        if os.path.exists(path):
            try:
                data_handle = open(path, 'rb')
                tlds = pickle.load(data_handle)
            except:
                print "Unable to load TLD pickle."
                sys.exit(1)
        else:
            resource = urllib.urlopen(self.url)
            tlds = [line.strip() for line in resource.readlines() if line[0] not in "/\n"]
            pickle.dump(tlds, open(path, 'wb'))

        return tlds

# from http://stackoverflow.com/questions/1066933/1069780#1069780
def getDomain(url, tlds):
    urlElements = urlparse(url)[1].split('.')
    # urlElements = ["abcde","co","uk"]

    for i in range(-len(urlElements),0):
        lastIElements = urlElements[i:]
        #    i=-3: ["abcde","co","uk"]
        #    i=-2: ["co","uk"]
        #    i=-1: ["uk"] etc

        candidate = ".".join(lastIElements) # abcde.co.uk, co.uk, uk
        wildcardCandidate = ".".join(["*"]+lastIElements[1:]) # *.co.uk, *.uk, *
        exceptionCandidate = "!"+candidate

        # match tlds: 
        if (exceptionCandidate in tlds):
            return ".".join(urlElements[i:]) 
        if (candidate in tlds or wildcardCandidate in tlds):
            return ".".join(urlElements[i-1:])
            # returns "abcde.co.uk"

    raise ValueError("Domain not in global list of TLDs")

if len(sys.argv) == 1:
    print "Usage: %(name)s <url>" % {'name': sys.argv[0]}
    sys.exit()

tlds = TopLevelDomains().tlds

domain = getDomain(sys.argv[1], tlds)
subprocess.call(['whois', domain])
